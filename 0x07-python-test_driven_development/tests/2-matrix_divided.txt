The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

Importing function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided


Dividing each element of a 2x2 matrix by a number
    >>> matrix_divided([[1, 2], [3, 4]], 2)
        [[0.5, 1.0], [1.5, 2.0]]

Dividing each element of a 3x3 matrix by a number
    >>> matrix_divided([[9, 18, 27], [36, 45, 54], [63, 72, 81]], 9)
        [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0]]

Dividing each element of a 1x1 matrix by a number
    >>> matrix_divided([[10]], 5)
        [[2.0]]

Dividing each element of a 2x3 matrix by a number
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
        [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Dividing each element of a 4x4 matrix by a number
    >>> matrix_divided([[2, 4, 6, 8], [10, 12, 14, 16], [18, 20, 22, 24], [26, 28, 30, 32]], 4)
        [[0.5, 1.0, 1.5, 2.0], [2.5, 3.0, 3.5, 4.0], [4.5, 5.0, 5.5, 6.0], [6.5, 7.0, 7.5, 8.0]]

Dividing each element of a 2x2 matrix by 0 (expecting ZeroDivisionError)
    >>> matrix_divided([[1, 2], [3, 4]], 0)
        Traceback (most recent call last):
                ...
        ZeroDivisionError: division by zero

Passing a non-numeric divisor (expecting TypeError)
    >>> matrix_divided([[1, 2], [3, 4]], "two")
    Traceback (most recent call last):
                ...
    TypeError: div must be a number

Passing a matrix with a row of different length (expecting TypeError)
    >>> matrix_divided([[1, 2], [3, 4, 5]], 2)
    Traceback (most recent call last):
                ...
    TypeError: Each row of the matrix must have the same size

The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

Importing function from the module:
    >>> add_integer = __import__('0-add_integer').add_integer


Test the function with two integers as input
    >>> add_integer(5, 10)
    15

Test the function with only one argument
    >>> add_integer(2)
    100

Test the function with one integer and one float as input
    >>> add_integer(5, 10.0)
    15

Test the function with two floats as input
    >>> add_integer(5.0, 10.0)
    15

Test the function with a string as input
    >>> add_integer(5, "10")
    Traceback (most recent call last):
                ...
    TypeError: b must be an integer


Test the function with a list as input
    >>> add_integer([5], 10)
    Traceback (most recent call last):
                ...
    TypeError: a must be an integer

Test the function with two strings as input
    >>> add_integer("5", "School")
    Traceback (most recent call last):
                ...
    TypeError: a must be an integer

Test the function with two lists as input
    >>> add_integer([5], [10])
    Traceback (most recent call last):
                ...
    TypeError: a must be an integer

Testing the function by passing "None"
    >>> add_integer(None)
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

Test the function with no arguments
    >>> add_integer()
    Traceback (most recent call last):
                ...
    TypeError: missing 1 required positional argument: a
